import streamlit as st
import pandas as pd
import openai

# Configurar tu API Key de OpenAI desde secrets (para futuras funciones si quieres usar IA)
openai.api_key = st.secrets.get("OPENAI_API_KEY", "")

# Funci√≥n para cargar el cat√°logo naturista
@st.cache_data
def cargar_catalogo():
    df = pd.read_excel('naturista.xlsx')
    return df

# Cargar cat√°logo
df_productos = cargar_catalogo()

# T√≠tulo de la App
st.title("üîé Consulta - Karolo")

# B√∫squeda tradicional por nombre de producto
st.header("üîç Buscar Producto por Nombre")

busqueda_nombre = st.text_input("Escribe el nombre o parte del nombre del producto:")

if busqueda_nombre:
    resultados = df_productos[df_productos['Nombre'].str.contains(busqueda_nombre, case=False, na=False)]

    if not resultados.empty:
        st.success(f"‚úÖ Se encontraron {len(resultados)} productos relacionados con tu b√∫squeda:")
        for index, row in resultados.iterrows():
            st.write(f"üîπ **C√≥digo: {row['C√≥digo']}** - {row['Nombre']} - **Precio:** ${int(row['Precio de venta con IVA'])}")
    else:
        st.warning("‚ö†Ô∏è No se encontr√≥ ning√∫n producto que coincida con tu b√∫squeda.")

# B√∫squeda por necesidad (nuevo m√≥dulo)
st.header("ü©∫ Buscar Productos por Necesidad de Salud")

consulta_necesidad = st.text_input("¬øQu√© necesidad tienes? (Ejemplo: circulaci√≥n, pr√≥stata, diabetes)")

if consulta_necesidad:
    # Palabras clave relacionadas a cada necesidad
    necesidades = {
        'circulaci√≥n': ['circulaci√≥n', 'vascular', 'cardio', 'coraz√≥n', 'arterias', 'venas', 'sangre'],
        'pr√≥stata': ['pr√≥stata', 'prostata', 'prost', 'saw palmetto', 'serenoa', 'pygeum'],
        'diabetes': ['diabetes', 'glucosa', 'gluco', 'sugar', 'az√∫car'],
        'defensas': ['defensas', 'inmunidad', 'inmune', 'vitamina c', 'equin√°cea', 'prop√≥leo']
    }

    # Buscar las palabras claves asociadas a la necesidad escrita
    palabras_clave = necesidades.get(consulta_necesidad.lower(), [consulta_necesidad.lower()])

    filtro_necesidad = df_productos['Nombre'].str.contains('|'.join(palabras_clave), case=False, na=False)

    resultados_necesidad = df_productos[filtro_necesidad]

    if not resultados_necesidad.empty:
        st.success(f"‚úÖ Encontramos {len(resultados_necesidad)} productos que pueden ayudarte con {consulta_necesidad}:")
        for index, row in resultados_necesidad.iterrows():
            st.write(f"üîπ **C√≥digo: {row['C√≥digo']}** - {row['Nombre']} - **Precio:** ${int(row['Precio de venta con IVA'])}")
    else:
        st.warning("‚ö†Ô∏è No se encontraron productos espec√≠ficos para esa necesidad en nuestro cat√°logo.")
